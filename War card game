import random
suits=("Diamonds","Spades","Hearts","Clubs")
ranks=("Two","Three","Four","Five","Six","Seven","Eight","Nine","Ten","Jack","Queen","King","Ace")
values={"Two":2,"Three":3,"Four":4,"Five":5,"Six":6,"Seven":7,"Eight":8,"Nine":9,"Ten":10,"Jack":11,"Queen":12,"King":13,"Ace":14}


class Card:
    
    def __init__(self,suit,rank):
        self.suit = suit
        self.rank = rank
        self.value = values[rank]
        
    def __str__(self):
        return self.rank + " of "+self.suit
    
class Deck:
    
    def __init__(self):
            self.all_cards = []
            
            for i in suits:
                for k in ranks:
                    created_card = Card(i,k)
                    self.all_cards.append(created_card)
            
            
    def shuffle(self):
        random.shuffle(self.all_cards)
    
    def deal_one(self):
        return self.all_cards.pop()
        
    
 class Player:
    
    def __init__(self,name):
        self.name=name
        self.all_cards=[]
        
    def remove_one(self):
        return self.all_cards.pop(0)
    
    def add_cards(self,new_cards):
        if type(self.all_cards) == type(new_cards):
            self.all_cards.extend(new_cards)
        else:
            self.all_cards.append(new_cards)
            
    def __str__(self):
        return f'Player {self.name} has {len(self.all_cards)} cards.'
        
        
        
player_one = Player("One")
player_two = Player("Two")

New_deck = Deck()
New_deck.shuffle()

for i in range(26):
    player_one.add_cards(New_deck.deal_one())
    player_two.add_cards(New_deck.deal_one())

game_on = True

Roundnum=0

while game_on:
    Roundnum +=1
    print(f'Round {Roundnum}')
    
    if (len(player_one.all_cards))==0:
        print("Player one is out of cards")
        print("Player Two wins!")
        game_on = False
        break
   
    
    if (len(player_two.all_cards))==0:
        print("Player two is out of cards")
        print("Player One wins!")
        game_on = False
        break
        
    player_one_cards = []
    player_one_cards.append(player_one.remove_one())
    
    player_two_cards = []
    player_two_cards.append(player_two.remove_one())
    
    at_war = True
    
    while at_war:
        if player_one_cards[-1].value > player_two_cards[-1].value:
            player_one.add_cards(player_one_cards)
            player_one.add_cards(player_two_cards)
            print(player_one_cards[-1])
            at_war = False
            break
            
        
        elif player_one_cards[-1].value < player_two_cards[-1].value:
            player_two.add_cards(player_one_cards)
            player_two.add_cards(player_two_cards)
            at_war = False
            break
            
        else:
            print("At war")
            if (len(player_one.all_cards)) < 5:
                print("Player one dont have enough cards")
                print("Player Two has own the game!")
                game_on = False
                break
            
            elif (len(player_two.all_cards)) < 5:
                print("Player two dont have enough cards")
                print("Player One has own the game!")
                game_on = False
                break
                
            else:
                for k in range(5):
                    player_one_cards.append(player_one.remove_one())
                    player_two_cards.append(player_two.remove_one())
                
