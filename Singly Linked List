class Node():
    
    def __init__(self , value=None):
        self.value = value
        self.next = None

class SLinkedList():
    
    def __init__(self):
        self.head = None
        self.tail = None
        
    def __iter__(self):
        node = self.head
        while node:
            yield node
            node = node.next
            
    def insertSSL(self,value,location):
        newNode = Node(value)
        if self.head is None:
            self.head = newNode
            self.tail = newNode
        else:
            if location == 0:
                newNode.next = self.head
                self.head = newNode
            elif location == -1:
                newNode.next = None
                self.tail.next = newNode
                self.tail = newNode
            else:
                tempNode = self.head
                index = 0
                while index <location -1:
                    tempNode = tempNode.next
                    index += 1
                nextNode = tempNode.next
                tempNode.next = newNode
                newNode.next=nextNode
        
    def traverseSSL(self):
        if self.head is None:
            print("Linked List does not exist")
        else:
            node = self.head
            while node is not None:
                print(node.value)
                node = node.next
            
    def deleteNode(self,location):
        if self.head is None:
            print("Linked List does not exist")
        else:
            if location == 0:
                if self.head == self.tail:
                    self.head = None
                    self.tail = None
                else:
                    self.head = self.head.next
            elif location == -1:
                if self.head ==  self.tail:
                    self.head = None
                    self.tail = None
                else:
                    node = self.head
                    while node is None:
                        if node.next == self.tail:
                            break
                    node.next = None
                    self.tail = node
            else:
                tempNode = self.head
                index = 0
                while index < location -1:
                    tempNode = tempNode.next
                    index+=1
                nextNode = tempNode.next
                tempNode.next = nextNode.next
        
    def searchSSL(self,nodvalue):
        if self.head is None:
            print("Linked List does not exist")
        else:
            node = self.head
            while node is not None:
                if node.value == nodvalue:
                    return node.value
                node = node.next
            return ("Value Not in List")
    
    def deleteSSL(self):
        if self.head is None:
            print("Linked List does not exist")
        else:
            self.head = None
            self.tail = None
            
